{"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"heading","text":"Taking measurements","level":3,"anchor":"Taking-measurements"},{"inlineContent":[{"text":"Once the device is connected and in an idle state, it is possible to take measurements:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/measure(completion:)"},{"text":" to take measurements in all modes supported by the device. This is the recommended option.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/measure(modes:completion:)-18cni","isActive":true},{"type":"text","text":" to take measurement in only the specified scan modes. In most cases, this will not speed up the measurement cycle time, so this is not recommended."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The measurement operation is asynchronous and will return immediately. While the measurement is in progress, no other commands can be sent to the Nix device","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Results of the measurement operation are provided in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"text":" closure specified when starting the measurement. This closure provides two arguments:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","isActive":true,"type":"reference"},{"type":"text","text":" status code, which will be "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS"},{"text":" for a successful operation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A dictionary containing the measurement values as "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData"},{"text":" objects. The keys of this dictionary correspond to the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode","type":"reference","isActive":true},{"text":" for each measurement value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"#handling-measurement-data"},{"type":"text","text":" below for notes on interpreting the measurement data."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The supported scan modes for a particular device are provided in the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportedModes","isActive":true},{"type":"text","text":" list, or can be checked by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/isModeSupported(_:)"},{"type":"text","text":". The expected results by device are shown below:"}]}]}]}]}]},{"rows":[[[{"type":"paragraph","inlineContent":[{"text":"Device Type","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode\/M0","isActive":true}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode\/M1","isActive":true}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode\/M2","isActive":true}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mini"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Mini 2"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mini 3"}]}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"text":"Pro","type":"text"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"type":"paragraph","inlineContent":[{"text":"☑","type":"text"}]}]],[[{"inlineContent":[{"type":"text","text":"Pro 2"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"type":"paragraph","inlineContent":[{"text":"☑","type":"text"}]}]],[[{"inlineContent":[{"text":"QC","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}]],[[{"inlineContent":[{"type":"text","text":"Spectro 2 (F1.0.0)"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Spectro 2 (F2.0.0)","type":"text"}]}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"text":"Spectro L","type":"text"}]}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}]]],"type":"table","header":"row","alignments":["left","center","center","center"]},{"level":4,"text":"Swift example","anchor":"Swift-example","type":"heading"},{"type":"codeListing","syntax":"swift","code":["\/\/ Device instance","let device: IDeviceCompat","","\/\/ Callback for measurement","let callback: DeviceResultCallback = { status, measurements in","    switch status {","    case .SUCCESS:","        \/\/ Successful operation","        \/\/ Handle measurement data here","        \/\/ ...","        break","    case .ERROR_NOT_READY:","        \/\/ Did not complete because the device was busy","        \/\/ ...","        break","    case .ERROR_NOT_SUPPORTED:","        \/\/ Did not complete because an unsupported scan mode was","        \/\/ specified","        \/\/ ...","        break","    case .ERROR_LOW_POWER:","        \/\/ Did not complete because the battery level is too low","        \/\/ ...","        break","    case .ERROR_TIMEOUT:","        \/\/ Timeout when waiting for result","        \/\/ ...","        break","    case .ERROR_AMBIENT_LIGHT:","        \/\/ Did not complete because of ambient light leakage","        \/\/ ...","        break","    case .ERROR_LICENSE:","        \/\/ Scan did not complete because of a license issue","        \/\/ Check LicenseManager.state","        \/\/ ...","        break","    default:","        break","    }","}","","\/\/ Run measurement","device.measure(completion: callback)"]},{"anchor":"Objective-C-example","level":4,"text":"Objective-C example","type":"heading"},{"code":["\/\/ Device instance","id<IDeviceCompat> _Nonnull device;","","\/\/ Define block to run on completion","void(^completion)(enum CommandStatus, MeasurementDictionary) =","^(enum CommandStatus status, MeasurementDictionary measurements) {","    switch (status) {","        case CommandStatusSUCCESS:","            \/\/ Successful operation","            \/\/ Handle measurement data here","            \/\/ ...","            break;","        case CommandStatusERROR_NOT_READY:","            \/\/ Did not complete because the device was busy","            \/\/ ...","            break;","        case CommandStatusERROR_NOT_SUPPORTED:","            \/\/ Did not complete because an unsupported scan mode was","            \/\/ specified","            \/\/ ...","            break;","        case CommandStatusERROR_LOW_POWER:","            \/\/ Did not complete because the battery level is too low","            \/\/ ...","            break;","        case CommandStatusERROR_TIMEOUT:","            \/\/ Timeout when waiting for result","            \/\/ ...","            break;","        case CommandStatusERROR_AMBIENT_LIGHT:","            \/\/ Did not complete because of ambient light leakage","            \/\/ ...","            break;","        case CommandStatusERROR_LICENSE:","            \/\/ Scan did not complete because of a license issue","            \/\/ Check LicenseManager.state","            \/\/ ...","            break;","        default:","            \/\/ Did not complete because of other internal error","            \/\/ ...","            break;","    }        ","};","","\/\/ Run measurement","[device measure:completion];"],"type":"codeListing","syntax":"objc"},{"level":3,"anchor":"Performing-in-field-profiling--calibration-with-reference-tile","text":"Performing in-field profiling \/ calibration with reference tile","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Certain device types support in-field profiling or calibration using a provided reference tile. This process requires first decoding a string from the QR code attached to the reference tile and then directing the user to measure the same tile. Any necessary adjustments\/corrections are performed internally by the SDK and\/or the Nix device firmware itself."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The in-field calibration procedure may be performed as often or seldom as desired by the user. However, the property "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/fieldCalibrationDue","type":"reference","isActive":true},{"type":"text","text":" flag indicates whether or not in-field calibration is recommended for the connected device."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"This flag is updated after each regular measurement"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"This flag is determined automatically by both elapsed time and ambient temperature change"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The property "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsFieldCalibration","isActive":true,"type":"reference"},{"type":"text","text":" indicates whether or not a connected device supports this feature. The expected result by device are shown below:"}]}]}]},{"rows":[[[{"inlineContent":[{"text":"Device Type","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"Supported","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mini"}]}],[{"inlineContent":[{"type":"text","text":"☐"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mini 2"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Mini 3"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Pro","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}]],[[{"inlineContent":[{"type":"text","text":"Pro 2"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☐"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"QC"}]}],[{"type":"paragraph","inlineContent":[{"text":"☑","type":"text"}]}]],[[{"inlineContent":[{"type":"text","text":"Spectro 2"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"☑","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Spectro L"}]}],[{"type":"paragraph","inlineContent":[{"text":"☑","type":"text"}]}]]],"alignments":["left","center"],"header":"row","type":"table"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Decode the QR code printed on the device reference tile and interpret as a string. Do not parse this data further.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check if the parsed data is valid using "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/isTileStringValid(_:)","isActive":true,"type":"reference"},{"type":"text","text":". If valid, continue to the next step."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Instruct the user to place the device on the reference tile."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using the decoded tile string, run the in-field calibration routine using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)"},{"type":"text","text":" and wait for closure \/ callback."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation is asynchronous and returns immediately. While the operation is in progress, no other commands can be sent to the Nix device (wait for the callback)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Every call to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","isActive":true},{"text":" will result in a closure with either a success or error code.","type":"text"}]}]}]}]}],"type":"orderedList"},{"anchor":"Swift-example","level":4,"type":"heading","text":"Swift example"},{"code":["\/\/ Device instance","var device: IDeviceCompat","","\/\/ String decoded from the reference tile","let tileString: String","","\/\/ Callback for field calibration","let callback: DeviceResultCallback = { status, measurements in","    switch status {","    case .SUCCESS:","        \/\/ Successful operation","        \/\/ ...","        break","    case .WARNING_TEMPERATURE:","        \/\/ Completed successfully, but ambient temperature is outside","        \/\/ of the recommended range","        \/\/ ...","        break","    case .ERROR_SCAN_DELTA:","        \/\/ Operation failed because the measured value of the reference","        \/\/ tile is too far from the expected value (high delta E)","        \/\/ ...","        break","    case .ERROR_NOT_READY:","        \/\/ Scan did not complete because the device was busy","        break","    case .ERROR_NOT_SUPPORTED:","        \/\/ Scan did not complete because this device does not support","        \/\/ this command","        \/\/ ...","        break","    case .ERROR_INVALID_ARGUMENT:","        \/\/ Scan did not complete because the tileString is invalid","        \/\/ ...","        break","    case .ERROR_LOW_POWER:","        \/\/ Scan did not complete because the battery level is too low","        \/\/ ...","        break","    case .ERROR_TIMEOUT:","        \/\/ Timeout when waiting for result","        \/\/ ...","        break","    case .ERROR_AMBIENT_LIGHT:","        \/\/ Scan did not complete because of ambient light leakage","        \/\/ ...","        break","    case .ERROR_LICENSE:","        \/\/ Scan did not complete because of a license issue","        \/\/ Check LicenseManager.state","        \/\/ ...","        break","    default:","        \/\/ Scan did not complete because of other internal error","        \/\/ ...","        break","    }","}","","\/\/ Run field calibration scan","device.runFieldCalibration(tileString: tileString, completion: callback)"],"type":"codeListing","syntax":"swift"},{"text":"Objective-C example","anchor":"Objective-C-example","level":4,"type":"heading"},{"syntax":"objc","code":["\/\/ Device instance","id<IDeviceCompat> _Nonnull device;","","\/\/ String decoded from the reference tile","NSString* tileString;","","\/\/ Define block to run on completion","void(^completion)(enum CommandStatus, MeasurementDictionary) =","^(enum CommandStatus status, MeasurementDictionary measurements) {","    switch (status) {","        case CommandStatusSUCCESS:","            \/\/ Successful operation","            \/\/ ...","            break;","        case CommandStatusWARNING_TEMPERATURE:","            \/\/ Completed successfully, but ambient temperature is","            \/\/ outside of the recommended range","            \/\/ ...","            break;","        case CommandStatusERROR_SCAN_DELTA:","            \/\/ Operation failed because the measured value of the","            \/\/ reference tile is too far from the expected value","            \/\/ (high delta E)","            \/\/ ...","            break;","        case CommandStatusERROR_NOT_READY:","            \/\/ Scan did not complete because the device was busy","            \/\/ ...","            break;","        case CommandStatusERROR_NOT_SUPPORTED:","            \/\/ Scan did not complete because this device does not","            \/\/ support this command","            \/\/ ...","            break;","        case CommandStatusERROR_INVALID_ARGUMENT:","            \/\/ Scan did not complete because the tileString is","            \/\/ invalid","            \/\/ ...","            break;","        case CommandStatusERROR_LOW_POWER:","            \/\/ Scan did not complete because the battery level is too","            \/\/ low","            \/\/ ...","            break;","        case CommandStatusERROR_TIMEOUT:","            \/\/ Timeout when waiting for result","            \/\/ ...","            break;","        case CommandStatusERROR_AMBIENT_LIGHT:","            \/\/ Scan did not complete because of ambient light leakage","            \/\/ ...","            break;","        case CommandStatusERROR_LICENSE:","            \/\/ Scan did not complete because of a license issue","            \/\/ Check LicenseManager.state","            \/\/ ...","            break;","        default:","            \/\/ Scan did not complete because of other internal error","            \/\/ ...","            break;","    }","};","","\/\/ Run field calibration scan","[device runFieldCalibration:tileString","                 completion:completion];"],"type":"codeListing"},{"level":3,"type":"heading","anchor":"Other-device-options","text":"Other device options"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some Nix devices support certain "},{"code":"boolean","type":"codeVoice"},{"text":" options. These options are set to be enabled by default (if supported) and do not usually need to be changed:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Applying temperature compensation"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Current state: ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/temperatureCompensationEnabled"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Is supported?: "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsTemperatureCompensation","type":"reference","isActive":true}]}]}]}]},{"content":[{"inlineContent":[{"text":"Applying in-field calibration","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Current state: "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/fieldCalibrationEnabled","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Is supported?: ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsFieldCalibration","isActive":true,"type":"reference"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using on-device haptic feedback"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Current state: "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/hapticFeedbackEnabled","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Is supported?: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsHapticFeedback"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Using on-device RGB feedback","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Current state: "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rgbFeedbackEnabled","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Is supported?: "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsRgbFeedback","type":"reference"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"A summary of device support is shown below, but can be checked at runtime (see notes above).","type":"text"}]},{"header":"row","type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Device type","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Temp comp."}]}],[{"inlineContent":[{"type":"text","text":"Field cal."}],"type":"paragraph"}],[{"inlineContent":[{"text":"Haptic","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"RGB","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Mini","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☐"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☐"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"Mini 2","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mini 3"}]}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Pro","type":"text"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☐"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Pro 2","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☐"}]}],[{"inlineContent":[{"text":"☐","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"QC"}]}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☐"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"☐","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Spectro 2"}]}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"☑"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Spectro L"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}],[{"inlineContent":[{"text":"☑","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"☑","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"☑"}]}]]],"alignments":["left","center","center","center","center"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Changing any of these options may require communication with the device itself and is an asynchronous operation, with the status of the operation provided via a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","isActive":true,"type":"reference"},{"type":"text","text":" closure."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"To enable or bypass temperature compensation, see ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setTemperatureCompensationEnabled(_:completion:)","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To enable or bypass applying in-field calibration, see "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setFieldCalibrationEnabled(_:completion:)","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To enable or disable haptic feedback, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setHapticFeedbackEnabled(_:completion:)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"To enable or disable RGB feedback, see "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setRgbFeedbackEnabled(_:completion:)","isActive":true}],"type":"paragraph"}]}]},{"text":"Other device properties","type":"heading","level":3,"anchor":"Other-device-properties"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"type":"text","text":" protocol defines other fixed properties that can be read once the device has connected and reached an idle state. These include, but are not limited to:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/extPowerState"},{"type":"text","text":": status of external power connection \/ charging"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/batteryLevel","isActive":true,"type":"reference"},{"text":": current battery level, ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" otherwise"}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/firmwareVersion"},{"text":": device firmware revision","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/hardwareVersion"},{"text":": device hardware revision","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/softwareVersion"},{"type":"text","text":": device software revision"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/serialNumber","isActive":true},{"type":"text","text":": device serial number"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/note","type":"reference","isActive":true},{"text":": device allocation \/ production code","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/providesSpectral"},{"type":"text","text":": indicates whether or not this device provides spectral data"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/providesDensity","type":"reference","isActive":true},{"type":"text","text":": indicates whether or not this device provides density data"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportedReferences","isActive":true},{"type":"text","text":": list of supported reference white values provided by the measurement data from this device"}],"type":"paragraph"}]}]},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/providesDensity","isActive":true},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/providesSpectral"},{"type":"text","text":" properties indicate whether or not the hardware device is capable of providing these data types. However, these measurements will only be available if these features are enabled by the current license. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license#Other-license-properties"},{"text":" for more details.","type":"text"}]}]},{"text":"Next Steps","anchor":"Next-Steps","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"}]}],"variants":[{"paths":["\/documentation\/nixuniversalsdk\/device-operations"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/device-operations"]}],"metadata":{"roleHeading":"Article","modules":[{"name":"NixUniversalSDK"}],"title":"Device Operations","role":"article"},"sections":[],"abstract":[{"text":"Take measurements, set device options, and query device properties","type":"text"}],"seeAlsoSections":[{"generated":true,"anchor":"Getting-Started","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/discovering-connecting","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper"],"title":"Getting Started"}],"kind":"article","references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/wrapper":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper","title":"Wrapper for Usage in C\/C++","kind":"article","url":"\/documentation\/nixuniversalsdk\/wrapper","abstract":[{"type":"text","text":"Review an example project which provides a C\/C++ interface for macOS applications"}],"role":"article","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/temperatureCompensationEnabled":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/temperatureCompensationEnabled","type":"topic","required":true,"abstract":[{"type":"text","text":"Flag to indicate if ambient temperature compensation \/ correction is applied ("},{"type":"codeVoice","code":"true"},{"type":"text","text":") or bypassed ("},{"type":"codeVoice","code":"false"},{"type":"text","text":") when evaluating the final calibrated measurement. Value is "},{"code":"true","type":"codeVoice"},{"type":"text","text":" by default if supported by the device. It is recommended to leave this set to "},{"code":"true","type":"codeVoice"},{"text":" if supported.","type":"text"}],"title":"temperatureCompensationEnabled","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"temperatureCompensationEnabled","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/temperaturecompensationenabled","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"temperatureCompensationEnabled"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/setHapticFeedbackEnabled(_:completion:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setHapticFeedbackEnabled(_:completion:)","type":"topic","navigatorTitle":[{"text":"setHapticFeedbackEnabled:completion:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/sethapticfeedbackenabled(_:completion:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Set the value for "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/hapticFeedbackEnabled","type":"reference"},{"type":"text","text":". This method is asynchronous and will return immediately."}],"title":"setHapticFeedbackEnabled(_:completion:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setHapticFeedbackEnabled"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DeviceResultCallback","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/providesSpectral":{"abstract":[{"type":"text","text":"Flag to indicate if this device type provides spectral information in its supplied "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData","type":"reference"},{"text":" results.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"providesSpectral","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"navigatorTitle":[{"text":"providesSpectral","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/providesSpectral","kind":"symbol","title":"providesSpectral","type":"topic","required":true,"role":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/providesspectral"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScanMode/M1":{"navigatorTitle":[{"text":"ScanModeM1","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/scanmode\/m1","abstract":[{"type":"text","text":"M1 conditions (ISO 13655)"}],"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode\/M1","title":"ScanMode.M1","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"M1","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"title":"NixUniversalSDK","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","type":"topic","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/example-apps":{"role":"article","type":"topic","title":"Example Applications","abstract":[{"type":"text","text":"Explore source code for demo iOS and macOS applications"}],"kind":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","url":"\/documentation\/nixuniversalsdk\/example-apps"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/fieldCalibrationDue":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/fieldCalibrationDue","kind":"symbol","navigatorTitle":[{"text":"fieldCalibrationDue","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/fieldcalibrationdue","title":"fieldCalibrationDue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fieldCalibrationDue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","abstract":[{"type":"text","text":"Flag to indicate if in-field calibration is recommended for this device at this time (if supported). This value is only valid after opening a connection and is a function of both time and ambient temperature. This value also updates each time a measurement is completed."}],"type":"topic","required":true},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/hardwareVersion":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hardwareVersion","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@objc(cs)DeviceVersion","text":"DeviceVersion"}],"role":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/hardwareversion","title":"hardwareVersion","required":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/hardwareVersion","type":"topic","navigatorTitle":[{"text":"hardwareVersion","kind":"identifier"}],"abstract":[{"type":"text","text":"Hardware version of this device. The value is valid only after a connection has successfully been opened."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/fieldCalibrationEnabled":{"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/fieldcalibrationenabled","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fieldCalibrationEnabled"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Flag to indicate if in-field calibration results are applied ("},{"type":"codeVoice","code":"true"},{"text":") or bypassed (","type":"text"},{"type":"codeVoice","code":"false"},{"text":") when evaluating the final calibrated measurement result. Value is ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" by default if supported by the device. It is recommended to leave this set to "},{"code":"true","type":"codeVoice"},{"text":" if supported.","type":"text"}],"title":"fieldCalibrationEnabled","navigatorTitle":[{"text":"fieldCalibrationEnabled","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/fieldCalibrationEnabled","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/handling-measurements":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","type":"topic","title":"Handling Measurement Data","abstract":[{"type":"text","text":"Query measurement values including colorimetry, spectral reflectance, and density"}],"kind":"article","role":"article","url":"\/documentation\/nixuniversalsdk\/handling-measurements"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/batteryLevel":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/batteryLevel","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"batteryLevel","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)NSNumber","text":"NSNumber","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"batteryLevel","type":"topic","navigatorTitle":[{"text":"batteryLevel","kind":"identifier"}],"kind":"symbol","role":"symbol","required":true,"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/batterylevel","abstract":[{"text":"Current battery level for this device (0 - 100), or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if not available. ","type":"text"},{"code":"NSNumber","type":"codeVoice"},{"type":"text","text":" contains an integer value. The value is valid only after a connection has successfully been opened."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/isTileStringValid(_:)":{"title":"isTileStringValid(_:)","abstract":[{"type":"text","text":"Check if the formatting of the reference tile string data matches the expected format for this device, or "},{"code":"false","type":"codeVoice"},{"type":"text","text":" if the device does not support this feature."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/isTileStringValid(_:)","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/istilestringvalid(_:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isTileStringValid"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"navigatorTitle":[{"kind":"identifier","text":"isTileStringValid:"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/softwareVersion":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/softwareVersion","kind":"symbol","title":"softwareVersion","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"softwareVersion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@objc(cs)DeviceVersion","text":"DeviceVersion"}],"abstract":[{"type":"text","text":"Software version of this device. The value is valid only after a connection has successfully been opened."}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/softwareversion","navigatorTitle":[{"text":"softwareVersion","kind":"identifier"}],"required":true},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IMeasurementData":{"kind":"symbol","abstract":[{"text":"Protocol defining the properties and methods provided by Nix device measurements. These objects are provided in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"type":"text","text":" callback after a measurement is taken using an "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"reference","isActive":true},{"type":"text","text":" instance, or can be reconstructed from raw string data using "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/MeasurementData\/fromRaw(_:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData","title":"IMeasurementData","navigatorTitle":[{"text":"IMeasurementData","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/imeasurementdata","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IMeasurementData"}],"role":"symbol"},"#handling-measurement-data":{"identifier":"#handling-measurement-data","titleInlineContent":[{"type":"text","text":"Handling measurement data"}],"type":"link","title":"Handling measurement data","url":"#handling-measurement-data"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/MeasurementData/fromRaw(_:)":{"abstract":[{"type":"text","text":"Reconstructs a "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData","type":"reference"},{"type":"text","text":" instance from its raw string value, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the data is invalid."}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/MeasurementData\/fromRaw(_:)","title":"fromRaw(_:)","url":"\/documentation\/nixuniversalsdk\/measurementdata\/fromraw(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fromRaw"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NixUniversalSDK@objc(pl)IMeasurementData","text":"IMeasurementData","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/setFieldCalibrationEnabled(_:completion:)":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setFieldCalibrationEnabled(_:completion:)","kind":"symbol","title":"setFieldCalibrationEnabled(_:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setFieldCalibrationEnabled"},{"kind":"text","text":"("},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DeviceResultCallback","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Set the value for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/fieldCalibrationEnabled"},{"type":"text","text":". This method is asynchronous and will return immediately."}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/setfieldcalibrationenabled(_:completion:)","navigatorTitle":[{"kind":"identifier","text":"setFieldCalibrationEnabled:completion:"}],"required":true},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/discovering-connecting":{"role":"article","title":"Discovering and Connecting to Nix Devices","abstract":[{"type":"text","text":"Use the device scanner to discover Nix devices and open a connection"}],"url":"\/documentation\/nixuniversalsdk\/discovering-connecting","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/discovering-connecting","kind":"article","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/setRgbFeedbackEnabled(_:completion:)":{"title":"setRgbFeedbackEnabled(_:completion:)","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"setRgbFeedbackEnabled:completion:"}],"abstract":[{"text":"Set the value for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rgbFeedbackEnabled"},{"text":". This method is asynchronous and will return immediately.","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setRgbFeedbackEnabled(_:completion:)","required":true,"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/setrgbfeedbackenabled(_:completion:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setRgbFeedbackEnabled"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"text":": ","kind":"text"},{"text":"DeviceResultCallback","kind":"typeIdentifier","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka"},{"kind":"text","text":")"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_SUPPORTED","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance."}],"type":"topic","title":"CommandStatus.ERROR_NOT_SUPPORTED","navigatorTitle":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/extPowerState":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/extpowerstate","navigatorTitle":[{"text":"extPowerState","kind":"identifier"}],"title":"extPowerState","abstract":[{"type":"text","text":"External power connection state for this device. The value is valid only after a connection has successfully been opened."}],"kind":"symbol","required":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/extPowerState","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extPowerState","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/supportsHapticFeedback":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsHapticFeedback"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsHapticFeedback","navigatorTitle":[{"kind":"identifier","text":"supportsHapticFeedback"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/supportshapticfeedback","kind":"symbol","title":"supportsHapticFeedback","abstract":[{"text":"Flag to indicate if the device supports built-in haptic feedback.","type":"text"}],"type":"topic","required":true},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/setTemperatureCompensationEnabled(_:completion:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/setTemperatureCompensationEnabled(_:completion:)","title":"setTemperatureCompensationEnabled(_:completion:)","navigatorTitle":[{"kind":"identifier","text":"setTemperatureCompensationEnabled:completion:"}],"abstract":[{"text":"Set the value for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/temperatureCompensationEnabled"},{"type":"text","text":". This method is asynchronous and will return immediately."}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/settemperaturecompensationenabled(_:completion:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setTemperatureCompensationEnabled","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","kind":"typeIdentifier","text":"DeviceResultCallback"},{"kind":"text","text":")"}],"required":true},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"type":"topic","abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" objects are found nearby using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","navigatorTitle":[{"kind":"identifier","text":"IDeviceCompat"}],"title":"IDeviceCompat","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"IDeviceCompat","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","role":"symbol","abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance."}],"title":"DeviceResultCallback","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeviceResultCallback"}],"kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScanMode":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode","type":"topic","abstract":[{"text":"Enum to describe the measurement modes used by Nix devices","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScanMode"}],"title":"ScanMode","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ScanMode","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/scanmode"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","url":"\/documentation\/nixuniversalsdk\/devicescanner","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeviceScanner","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DeviceScanner"}],"title":"DeviceScanner","role":"symbol","abstract":[{"type":"text","text":"Class used to discover nearby Nix devices"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/activating-license#Other-license-properties":{"kind":"section","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license#Other-license-properties","title":"Other license properties","abstract":[],"url":"\/documentation\/nixuniversalsdk\/activating-license#Other-license-properties"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ReferenceWhite":{"title":"ReferenceWhite","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceWhite"}],"abstract":[{"type":"text","text":"Enum to describe valid options for reference white IDs"}],"navigatorTitle":[{"text":"ReferenceWhite","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/referencewhite"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/firmwareVersion":{"kind":"symbol","title":"firmwareVersion","navigatorTitle":[{"text":"firmwareVersion","kind":"identifier"}],"type":"topic","required":true,"role":"symbol","abstract":[{"type":"text","text":"Firmware version of this device. The value is valid only after a connection has successfully been opened."}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/firmwareversion","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/firmwareVersion","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firmwareVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DeviceVersion","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@objc(cs)DeviceVersion"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/rgbFeedbackEnabled":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rgbFeedbackEnabled","title":"rgbFeedbackEnabled","navigatorTitle":[{"text":"rgbFeedbackEnabled","kind":"identifier"}],"abstract":[{"text":"Flag to indicate if device RGB feedback is enabled.","type":"text"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/rgbfeedbackenabled","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rgbFeedbackEnabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"required":true},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/hapticFeedbackEnabled":{"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/hapticfeedbackenabled","type":"topic","title":"hapticFeedbackEnabled","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/hapticFeedbackEnabled","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hapticFeedbackEnabled"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"required":true,"navigatorTitle":[{"kind":"identifier","text":"hapticFeedbackEnabled"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Flag to indicate if device haptic feedback is enabled."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"role":"symbol","title":"CommandStatus","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"abstract":[{"type":"text","text":"Enum describing the possible status of commands executed by the Nix device, as provided in the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","type":"reference","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/nixuniversalsdk\/commandstatus","navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/providesDensity":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"providesDensity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","navigatorTitle":[{"text":"providesDensity","kind":"identifier"}],"abstract":[{"type":"text","text":"Flag to indicate if this device type provides density information in its supplied "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData"},{"type":"text","text":" results."}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/providesDensity","title":"providesDensity","required":true,"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/providesdensity","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/supportsFieldCalibration":{"required":true,"abstract":[{"text":"Flag to indicate if this device supports in-field calibration using the provided reference tile.","type":"text"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/supportsfieldcalibration","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"supportsFieldCalibration","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","navigatorTitle":[{"text":"supportsFieldCalibration","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsFieldCalibration","title":"supportsFieldCalibration","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/supportsRgbFeedback":{"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/supportsrgbfeedback","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsRgbFeedback","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"supportsRgbFeedback"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"supportsRgbFeedback","type":"topic","required":true,"abstract":[{"type":"text","text":"Flag to indicate if the device supports built-in RGB feedback."}],"role":"symbol","navigatorTitle":[{"text":"supportsRgbFeedback","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/supportedReferences":{"title":"supportedReferences","abstract":[{"type":"text","text":"List of supported reference white points for the colorimetry data available from the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData","isActive":true},{"type":"text","text":" results provided by this device (set of "},{"code":"NSNumber","type":"codeVoice"},{"text":" containing ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite","type":"reference","isActive":true},{"text":" values)","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedReferences"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportedReferences","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/supportedreferences","required":true,"role":"symbol","navigatorTitle":[{"text":"supportedReferences","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"type":"topic","title":"runFieldCalibration(tileString:completion:)","abstract":[{"text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code."}],"required":true,"role":"symbol","navigatorTitle":[{"text":"runFieldCalibration:completion:","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"runFieldCalibration","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tileString"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DeviceResultCallback","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/supportsTemperatureCompensation":{"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/supportstemperaturecompensation","type":"topic","abstract":[{"type":"text","text":"Flag to indicate if this device supports automatic temperature compensation to correct for small changes in ambient temperature."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsTemperatureCompensation"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"navigatorTitle":[{"text":"supportsTemperatureCompensation","kind":"identifier"}],"required":true,"kind":"symbol","title":"supportsTemperatureCompensation","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportsTemperatureCompensation","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/isModeSupported(_:)":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/ismodesupported(_:)","navigatorTitle":[{"text":"isModeSupported:","kind":"identifier"}],"title":"isModeSupported(_:)","abstract":[{"type":"text","text":"Helper to check if a particular scan mode is supported by this device (i.e. - checks if the mode is present in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportedModes"},{"type":"text","text":" list). This value is valid only after a connection has successfully been opened."}],"kind":"symbol","required":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/isModeSupported(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isModeSupported","kind":"identifier"},{"kind":"text","text":"("},{"text":"ScanMode","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@ScanMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/measure(modes:completion:)-18cni":{"role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/measure(modes:completion:)-18cni","defaultImplementations":1,"required":true,"abstract":[{"type":"text","text":"Run a measurement in the specified scan modes. If any unsupported modes are selected, the measurement will fail with status code "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","isActive":true},{"type":"text","text":". This method is asynchronous and will return immediately."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"measure","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"modes"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSNumber","text":"NSNumber","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","kind":"typeIdentifier","text":"DeviceResultCallback"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/measure(modes:completion:)-18cni","type":"topic","title":"measure(modes:completion:)","navigatorTitle":[{"text":"measureWithModes:completion:","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SUCCESS"}],"kind":"symbol","navigatorTitle":[{"text":"CommandStatusSUCCESS","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command completed successfully.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","title":"CommandStatus.SUCCESS","url":"\/documentation\/nixuniversalsdk\/commandstatus\/success","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScanMode/M0":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode\/M0","title":"ScanMode.M0","navigatorTitle":[{"text":"ScanModeM0","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/scanmode\/m0","abstract":[{"type":"text","text":"M0 conditions (ISO 13655)"}],"role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"M0"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/note":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"note","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","abstract":[{"type":"text","text":"Factory note for this device, containing allocation code. The value is valid only after a connection has successfully been opened."}],"required":true,"navigatorTitle":[{"kind":"identifier","text":"note"}],"kind":"symbol","type":"topic","title":"note","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/note","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/note"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/measure(completion:)":{"title":"measure(completion:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/measure(completion:)","required":true,"navigatorTitle":[{"text":"measure:","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Run a measurement for all supported scan modes. This method is asynchronous and will return immediately."}],"role":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/measure(completion:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"measure","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","text":"DeviceResultCallback","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/add-to-xcode":{"abstract":[{"type":"text","text":"Add the library bundle to your project and declare peripheral uses"}],"role":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","title":"Adding to Your Xcode Project","kind":"article","type":"topic","url":"\/documentation\/nixuniversalsdk\/add-to-xcode"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/release-notes":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","kind":"article","role":"article","abstract":[{"type":"text","text":"Review the changes made in this version of the library"}],"type":"topic","title":"Release Notes","url":"\/documentation\/nixuniversalsdk\/release-notes"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/activating-license":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","kind":"article","role":"article","abstract":[{"type":"text","text":"Enable Nix device functions with your license code"}],"type":"topic","title":"Activating the SDK License","url":"\/documentation\/nixuniversalsdk\/activating-license"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/supportedModes":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/supportedmodes","navigatorTitle":[{"kind":"identifier","text":"supportedModes"}],"title":"supportedModes","abstract":[{"text":"List of scan modes that are supported by this device (set of ","type":"text"},{"type":"codeVoice","code":"NSNumber"},{"type":"text","text":" containing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode"},{"text":" values). The list is valid only after a connection has successfully been opened.","type":"text"}],"kind":"symbol","required":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/supportedModes","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"supportedModes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSNumber","text":"NSNumber"},{"text":">","kind":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScanMode/M2":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"M2","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ScanModeM2","kind":"identifier"}],"abstract":[{"type":"text","text":"M2 conditions (ISO 13655)"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScanMode\/M2","title":"ScanMode.M2","url":"\/documentation\/nixuniversalsdk\/scanmode\/m2","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/serialNumber":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/serialNumber","type":"topic","required":true,"kind":"symbol","title":"serialNumber","abstract":[{"text":"Serial number for this device. The value is valid only after a connection has successfully been opened.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"serialNumber","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/serialnumber","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"serialNumber"}]}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"path":"\/seeAlsoSections","op":"replace","value":[{"title":"Getting Started","anchor":"Getting-Started","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/discovering-connecting","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper"],"generated":true}]},{"value":"temperatureCompensationEnabled","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1temperatureCompensationEnabled\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1temperatureCompensationEnabled\/fragments","value":[{"kind":"identifier","text":"temperatureCompensationEnabled"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setHapticFeedbackEnabled(_:completion:)\/title","value":"setHapticFeedbackEnabled:completion:"},{"value":[{"kind":"text","text":"- "},{"text":"setHapticFeedbackEnabled:completion:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setHapticFeedbackEnabled(_:completion:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1providesSpectral\/title","value":"providesSpectral","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1providesSpectral\/fragments","value":[{"text":"providesSpectral","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode~1M1\/title","value":"ScanModeM1","op":"replace"},{"value":[{"text":"ScanModeM1","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode~1M1\/fragments"},{"op":"replace","value":"fieldCalibrationDue","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1fieldCalibrationDue\/title"},{"value":[{"kind":"identifier","text":"fieldCalibrationDue"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1fieldCalibrationDue\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1hardwareVersion\/title","value":"hardwareVersion","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1hardwareVersion\/fragments","value":[{"text":"hardwareVersion","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1fieldCalibrationEnabled\/title","op":"replace","value":"fieldCalibrationEnabled"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1fieldCalibrationEnabled\/fragments","value":[{"kind":"identifier","text":"fieldCalibrationEnabled"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1batteryLevel\/title","value":"batteryLevel"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1batteryLevel\/fragments","op":"replace","value":[{"text":"batteryLevel","kind":"identifier"}]},{"value":"isTileStringValid:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1isTileStringValid(_:)\/title"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"isTileStringValid:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1isTileStringValid(_:)\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1softwareVersion\/title","value":"softwareVersion"},{"value":[{"kind":"identifier","text":"softwareVersion"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1softwareVersion\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData\/title","op":"replace","value":"IMeasurementData"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData\/fragments","value":[{"kind":"identifier","text":"IMeasurementData"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData\/navigatorTitle","value":[{"kind":"identifier","text":"IMeasurementData"}],"op":"replace"},{"value":"setFieldCalibrationEnabled:completion:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setFieldCalibrationEnabled(_:completion:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setFieldCalibrationEnabled(_:completion:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setFieldCalibrationEnabled:completion:"}],"op":"replace"},{"op":"replace","value":"setRgbFeedbackEnabled:completion:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setRgbFeedbackEnabled(_:completion:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setRgbFeedbackEnabled(_:completion:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"setRgbFeedbackEnabled:completion:","kind":"identifier"}]},{"op":"replace","value":"CommandStatusERROR_NOT_SUPPORTED","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title"},{"value":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1extPowerState\/title","op":"replace","value":"extPowerState"},{"value":[{"text":"extPowerState","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1extPowerState\/fragments","op":"replace"},{"op":"replace","value":"supportsHapticFeedback","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsHapticFeedback\/title"},{"value":[{"kind":"identifier","text":"supportsHapticFeedback"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsHapticFeedback\/fragments","op":"replace"},{"value":"setTemperatureCompensationEnabled:completion:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setTemperatureCompensationEnabled(_:completion:)\/title","op":"replace"},{"value":[{"kind":"text","text":"- "},{"text":"setTemperatureCompensationEnabled:completion:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1setTemperatureCompensationEnabled(_:completion:)\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","op":"replace","value":"IDeviceCompat"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","op":"replace","value":[{"text":"IDeviceCompat","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode\/title","value":"ScanMode"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode\/fragments","value":[{"text":"ScanMode","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode\/navigatorTitle","value":[{"kind":"identifier","text":"ScanMode"}],"op":"replace"},{"op":"replace","value":"DeviceScanner","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/fragments","value":[{"kind":"identifier","text":"DeviceScanner"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/navigatorTitle","value":[{"text":"DeviceScanner","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite\/title","op":"replace","value":"ReferenceWhite"},{"value":[{"text":"ReferenceWhite","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite\/navigatorTitle","op":"replace","value":[{"text":"ReferenceWhite","kind":"identifier"}]},{"value":"firmwareVersion","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1firmwareVersion\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1firmwareVersion\/fragments","value":[{"text":"firmwareVersion","kind":"identifier"}],"op":"replace"},{"value":"rgbFeedbackEnabled","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1rgbFeedbackEnabled\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1rgbFeedbackEnabled\/fragments","op":"replace","value":[{"kind":"identifier","text":"rgbFeedbackEnabled"}]},{"value":"hapticFeedbackEnabled","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1hapticFeedbackEnabled\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1hapticFeedbackEnabled\/fragments","value":[{"kind":"identifier","text":"hapticFeedbackEnabled"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title","value":"CommandStatus","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","value":[{"text":"CommandStatus","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1providesDensity\/title","op":"replace","value":"providesDensity"},{"value":[{"kind":"identifier","text":"providesDensity"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1providesDensity\/fragments","op":"replace"},{"op":"replace","value":"supportsFieldCalibration","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsFieldCalibration\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsFieldCalibration\/fragments","value":[{"text":"supportsFieldCalibration","kind":"identifier"}]},{"value":"supportsRgbFeedback","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsRgbFeedback\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsRgbFeedback\/fragments","value":[{"text":"supportsRgbFeedback","kind":"identifier"}]},{"op":"replace","value":"supportedReferences","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportedReferences\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportedReferences\/fragments","value":[{"text":"supportedReferences","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title","value":"runFieldCalibration:completion:"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"runFieldCalibration:completion:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments"},{"value":"supportsTemperatureCompensation","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsTemperatureCompensation\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportsTemperatureCompensation\/fragments","value":[{"text":"supportsTemperatureCompensation","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1isModeSupported(_:)\/title","value":"isModeSupported:"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"isModeSupported:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1isModeSupported(_:)\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1measure(modes:completion:)-18cni\/title","value":"measureWithModes:completion:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1measure(modes:completion:)-18cni\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"measureWithModes:completion:"}],"op":"replace"},{"op":"replace","value":"CommandStatusSUCCESS","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title"},{"value":[{"kind":"identifier","text":"CommandStatusSUCCESS"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode~1M0\/title","op":"replace","value":"ScanModeM0"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode~1M0\/fragments","op":"replace","value":[{"kind":"identifier","text":"ScanModeM0"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1note\/title","op":"replace","value":"note"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1note\/fragments","value":[{"text":"note","kind":"identifier"}],"op":"replace"},{"value":"measure:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1measure(completion:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1measure(completion:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"measure:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportedModes\/title","value":"supportedModes","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1supportedModes\/fragments","value":[{"kind":"identifier","text":"supportedModes"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode~1M2\/title","value":"ScanModeM2"},{"value":[{"text":"ScanModeM2","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScanMode~1M2\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1serialNumber\/title","op":"replace","value":"serialNumber"},{"value":[{"text":"serialNumber","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1serialNumber\/fragments","op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}