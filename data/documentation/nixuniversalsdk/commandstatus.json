{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandStatus"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Enum describing the possible status of commands executed by the Nix device, as provided in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"kind":"symbol","metadata":{"title":"CommandStatus","roleHeading":"Enumeration","modules":[{"name":"NixUniversalSDK"}],"symbolKind":"enum","externalID":"c:@M@NixUniversalSDK@E@CommandStatus","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatus"}]},"variants":[{"paths":["\/documentation\/nixuniversalsdk\/commandstatus"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus"]}],"topicSections":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)"],"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"]}],"sections":[],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH","doc:\/\/com.nixsensor.universalsdk\/SY"],"title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"title":"NixUniversalSDK","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","type":"topic","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INTERNAL":{"kind":"symbol","title":"CommandStatus.ERROR_INTERNAL","type":"topic","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_internal","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INTERNAL"}],"navigatorTitle":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the command failed due to an unknown \/ internal SDK error."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"type":"topic","title":"runFieldCalibration(tileString:completion:)","abstract":[{"text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code."}],"required":true,"role":"symbol","navigatorTitle":[{"text":"runFieldCalibration:completion:","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"runFieldCalibration","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tileString"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DeviceResultCallback","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SUCCESS"}],"kind":"symbol","navigatorTitle":[{"text":"CommandStatusSUCCESS","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command completed successfully.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","title":"CommandStatus.SUCCESS","url":"\/documentation\/nixuniversalsdk\/commandstatus\/success","role":"symbol"},"doc://com.nixsensor.universalsdk/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_SUPPORTED","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance."}],"type":"topic","title":"CommandStatus.ERROR_NOT_SUPPORTED","navigatorTitle":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","kind":"symbol","abstract":[{"type":"text","text":"Describes the current state of the  "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true},{"text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","isActive":true,"type":"reference"},{"text":")","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"text":"LicenseManagerState","preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","title":"state","navigatorTitle":[{"kind":"identifier","text":"state"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/WARNING_TEMPERATURE":{"navigatorTitle":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"WARNING_TEMPERATURE","kind":"identifier"}],"title":"CommandStatus.WARNING_TEMPERATURE","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE","type":"topic","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/warning_temperature","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation completed successfully, but a temperature warning was issued (i.e. - the ambient temperature of the device is currently outside of the recommended range). This status is only possible after a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)"},{"text":" command.","type":"text"}],"kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/RawRepresentable-Implementations":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/rawrepresentable-implementations","type":"topic","abstract":[],"kind":"article","title":"RawRepresentable Implementations","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations","role":"collectionGroup"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"url":"\/documentation\/nixuniversalsdk\/licensemanager","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LicenseManager"}],"navigatorTitle":[{"text":"LicenseManager","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","title":"LicenseManager","type":"topic","abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LICENSE":{"abstract":[{"text":"Status code indicating that the command failed due to a problem with the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager"},{"type":"text","text":". Check "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true},{"text":" for details.","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_license","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_LICENSE"}],"type":"topic","title":"CommandStatus.ERROR_LICENSE","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INVALID_ARGUMENT"}],"role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","title":"CommandStatus.ERROR_INVALID_ARGUMENT","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LOW_POWER":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LOW_POWER"}],"abstract":[{"type":"text","text":"Status code indicating that the command was aborted because of a low power state on the Nix device (e.g. - insufficient battery power to complete a measurement)."}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_LOW_POWER"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","title":"CommandStatus.ERROR_LOW_POWER","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_low_power","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"role":"symbol","title":"CommandStatus","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"abstract":[{"type":"text","text":"Enum describing the possible status of commands executed by the Nix device, as provided in the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","type":"reference","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/nixuniversalsdk\/commandstatus","navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","type":"topic"},"doc://com.nixsensor.universalsdk/SY":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","role":"symbol","abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance."}],"title":"DeviceResultCallback","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeviceResultCallback"}],"kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/equatable-implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Equatable Implementations","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/init(rawValue:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/commandstatus\/init(rawvalue:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)","title":"init(rawValue:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_TIMEOUT":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_TIMEOUT"}],"role":"symbol","abstract":[{"text":"Status code indicating that the command failed due to a timeout error.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_TIMEOUT"}],"kind":"symbol","type":"topic","title":"CommandStatus.ERROR_TIMEOUT","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_timeout","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT"},"doc://com.nixsensor.universalsdk/SH":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/name":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/name","title":"name","kind":"symbol","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"String representation of this "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","isActive":true}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_AMBIENT_LIGHT":{"navigatorTitle":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"type":"topic","abstract":[{"text":"Status code indicating that the measurement operation failed due to the detection of ambient light leakage.","type":"text"}],"kind":"symbol","title":"CommandStatus.ERROR_AMBIENT_LIGHT","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"ERROR_AMBIENT_LIGHT","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_ambient_light"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_SCAN_DELTA":{"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","kind":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_SCAN_DELTA","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation failed due to high delta E (i.e. - the calibration reference tile could not be verified by its color value). This status is only possible after a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)"},{"type":"text","text":" command."}],"title":"CommandStatus.ERROR_SCAN_DELTA","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_scan_delta","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"ERROR_SCAN_DELTA","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_READY":{"abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the Nix device was not ready (i.e. - it was already executing another command)."}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_ready","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_NOT_READY"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_NOT_READY"}],"type":"topic","title":"CommandStatus.ERROR_NOT_READY","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"type":"topic","abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" objects are found nearby using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","navigatorTitle":[{"kind":"identifier","text":"IDeviceCompat"}],"title":"IDeviceCompat","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"IDeviceCompat","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":"Enumeration","op":"replace","path":"\/metadata\/roleHeading"},{"op":"replace","value":"CommandStatus","path":"\/metadata\/title"},{"op":"replace","path":"\/metadata\/symbolKind","value":"enum"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"path":"\/metadata\/fragments","op":"replace"},{"path":"\/metadata\/navigatorTitle","value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace"},{"op":"replace","value":[{"anchor":"Enumeration-Cases","title":"Enumeration Cases","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"generated":true}],"path":"\/topicSections"},{"value":null,"path":"\/relationshipsSections","op":"replace"},{"path":"\/seeAlsoSections","op":"add","value":null},{"op":"replace","value":{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["occ"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@NSInteger","kind":"typeIdentifier","text":"NSInteger"},{"kind":"text","text":";"}]}]},"path":"\/primaryContentSections\/0"},{"value":"CommandStatusERROR_INTERNAL","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_INTERNAL"}]},{"value":"runFieldCalibration:completion:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title","op":"replace"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"runFieldCalibration:completion:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title","value":"CommandStatusSUCCESS","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments","value":[{"kind":"identifier","text":"CommandStatusSUCCESS"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title","value":"CommandStatusERROR_NOT_SUPPORTED"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_SUPPORTED"}]},{"value":"state","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments","value":[{"text":"state","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"CommandStatusWARNING_TEMPERATURE","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/fragments","value":[{"kind":"identifier","text":"CommandStatusWARNING_TEMPERATURE"}],"op":"replace"},{"value":"LicenseManager","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments","value":[{"text":"LicenseManager","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle","value":[{"text":"LicenseManager","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/title","value":"CommandStatusERROR_LICENSE"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/fragments","value":[{"text":"CommandStatusERROR_LICENSE","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","value":"CommandStatusERROR_INVALID_ARGUMENT"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/title","value":"CommandStatusERROR_LOW_POWER"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title","op":"replace","value":"CommandStatus"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments","value":[{"kind":"identifier","text":"CommandStatus"}]},{"value":[{"kind":"identifier","text":"CommandStatus"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","op":"replace"},{"value":"CommandStatusERROR_TIMEOUT","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/fragments","value":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/title","op":"replace","value":"CommandStatusERROR_AMBIENT_LIGHT"},{"value":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/title","op":"replace","value":"CommandStatusERROR_SCAN_DELTA"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_SCAN_DELTA","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/title","value":"CommandStatusERROR_NOT_READY","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_READY"}],"op":"replace"},{"value":"IDeviceCompat","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"IDeviceCompat"}]}]}]}